2023-06-12T06:10:05,680+0000 [7 1] com.newrelic INFO: New Relic Agent: Loading configuration file "/usr/local/tomcat/newrelic/./newrelic.yml"
2023-06-12T06:10:05,758+0000 [7 1] com.newrelic INFO: Using default collector host: collector.newrelic.com
2023-06-12T06:10:05,758+0000 [7 1] com.newrelic INFO: Using default metric ingest URI: https://metric-api.newrelic.com/metric/v1
2023-06-12T06:10:05,758+0000 [7 1] com.newrelic INFO: Using default event ingest URI: https://insights-collector.newrelic.com/v1/accounts/events
2023-06-12T06:10:05,784+0000 [7 1] com.newrelic ERROR: license_key is empty in the config. Not starting New Relic Agent.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.6.7)

{"timestamp":"2023-06-12T06:10:07.874Z","level":"INFO","class":"org.springframework.boot.StartupInfoLogger","message":"Starting MwIndexerServiceApplication v0.0.1-SNAPSHOT using Java 11.0.11 on mw-indexer-service-qc-app-zee5-86b4866676-svlp7 with PID 7 (/application/mw-indexer-service-jar.jar started by root in /application)"}
{"timestamp":"2023-06-12T06:10:07.942Z","level":"DEBUG","class":"org.springframework.boot.StartupInfoLogger","message":"Running with Spring Boot v2.6.7, Spring v5.3.19"}
{"timestamp":"2023-06-12T06:10:07.943Z","level":"INFO","class":"org.springframework.boot.SpringApplication","message":"No active profile set, falling back to 1 default profile: \"default\""}
{"timestamp":"2023-06-12T06:10:07.943Z","level":"DEBUG","class":"org.springframework.boot.SpringApplication","message":"Loading source class com.zee.cms.mw.indexer.MwIndexerServiceApplication"}
{"timestamp":"2023-06-12T06:10:08.051Z","level":"DEBUG","class":"org.springframework.context.support.AbstractApplicationContext","message":"Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@203dd56b"}
{"timestamp":"2023-06-12T06:10:08.079Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'"}
{"timestamp":"2023-06-12T06:10:08.149Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'"}
{"timestamp":"2023-06-12T06:10:08.257Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Ignored because not a concrete top-level class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/repository/newSolr/Zee5MainCollectionRepository.class]"}
{"timestamp":"2023-06-12T06:10:08.258Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Ignored because not a concrete top-level class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/repository/newSolr/Zee5MainCollectionV2Repository.class]"}
{"timestamp":"2023-06-12T06:10:08.258Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Ignored because not a concrete top-level class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/repository/secondMasterSolr/Zee5MainCollectionV2A2Repository.class]"}
{"timestamp":"2023-06-12T06:10:08.259Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Ignored because not a concrete top-level class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/repository/secondMasterSolr/Zee5MainCollectionMaster2Repository.class]"}
{"timestamp":"2023-06-12T06:10:08.260Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/service/MongoDBService.class]"}
{"timestamp":"2023-06-12T06:10:08.260Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/service/SolrIndexerService.class]"}
{"timestamp":"2023-06-12T06:10:08.260Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/service/SolrMaster2IndexerService.class]"}
{"timestamp":"2023-06-12T06:10:08.261Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/service/NewIndexerServiceV2CoreImpl.class]"}
{"timestamp":"2023-06-12T06:10:08.262Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Ignored because not a concrete top-level class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/service/NotificationService.class]"}
{"timestamp":"2023-06-12T06:10:08.262Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/service/NewIndexerServiceImpl.class]"}
{"timestamp":"2023-06-12T06:10:08.263Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/service/NotificationServiceImpl.class]"}
{"timestamp":"2023-06-12T06:10:08.274Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/KafkaConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.276Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/SecondMasterSolrConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.276Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/ConfluentKafkaConsumerConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.282Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/AwsConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.283Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/NewSolrConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.283Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/ConfluentKafkaProducerConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.283Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/MessagingConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.284Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/NotificationConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.285Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/producer/KafkaProducer.class]"}
{"timestamp":"2023-06-12T06:10:08.289Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/controller/IndexerController.class]"}
{"timestamp":"2023-06-12T06:10:08.290Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/publisher/NotificationPublisher.class]"}
{"timestamp":"2023-06-12T06:10:08.290Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/publisher/QueueMessagePublisher.class]"}
{"timestamp":"2023-06-12T06:10:08.341Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/listener/KafkaConsumer.class]"}
{"timestamp":"2023-06-12T06:10:08.342Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/listener/IndexerListener.class]"}
{"timestamp":"2023-06-12T06:10:08.353Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/KafkaConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.354Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/ConfluentKafkaConsumerConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.354Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/AwsConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.354Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/NewSolrConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.354Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/ConfluentKafkaProducerConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.354Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/MessagingConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.355Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/NotificationConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.363Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/KafkaConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.363Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/SecondMasterSolrConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.363Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/ConfluentKafkaConsumerConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.363Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/AwsConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.364Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/ConfluentKafkaProducerConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.364Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/MessagingConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.364Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/config/NotificationConfig.class]"}
{"timestamp":"2023-06-12T06:10:08.760Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'MANAGEMENT_ENDPOINTS_DEFAULT' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:08.846Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'MANAGEMENT_ENDPOINTS_INFO' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:09.150Z","level":"INFO","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"timestamp":"2023-06-12T06:10:09.151Z","level":"INFO","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Solr repositories in DEFAULT mode."}
{"timestamp":"2023-06-12T06:10:09.165Z","level":"DEBUG","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Scanning for Solr repositories in packages com.zee.cms.mw.indexer.repository.secondMasterSolr."}
{"timestamp":"2023-06-12T06:10:09.172Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/repository/secondMasterSolr/Zee5MainCollectionV2A2Repository.class]"}
{"timestamp":"2023-06-12T06:10:09.172Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/repository/secondMasterSolr/Zee5MainCollectionMaster2Repository.class]"}
{"timestamp":"2023-06-12T06:10:09.208Z","level":"INFO","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 41 ms. Found 2 Solr repository interfaces."}
{"timestamp":"2023-06-12T06:10:09.208Z","level":"INFO","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"timestamp":"2023-06-12T06:10:09.209Z","level":"INFO","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Solr repositories in DEFAULT mode."}
{"timestamp":"2023-06-12T06:10:09.209Z","level":"DEBUG","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Scanning for Solr repositories in packages com.zee.cms.mw.indexer.repository.newSolr."}
{"timestamp":"2023-06-12T06:10:09.211Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/repository/newSolr/Zee5MainCollectionRepository.class]"}
{"timestamp":"2023-06-12T06:10:09.211Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/repository/newSolr/Zee5MainCollectionV2Repository.class]"}
{"timestamp":"2023-06-12T06:10:09.241Z","level":"INFO","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 32 ms. Found 2 Solr repository interfaces."}
{"timestamp":"2023-06-12T06:10:09.377Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'AWS_STACK_AUTO' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:09.591Z","level":"INFO","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode!"}
{"timestamp":"2023-06-12T06:10:09.591Z","level":"INFO","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode."}
{"timestamp":"2023-06-12T06:10:09.591Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'"}
{"timestamp":"2023-06-12T06:10:09.592Z","level":"DEBUG","class":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages","message":"@EnableAutoConfiguration was declared on a class in the package 'com.zee.cms.mw.indexer'. Automatic @Repository and @Entity scanning is enabled."}
{"timestamp":"2023-06-12T06:10:09.592Z","level":"DEBUG","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Scanning for MongoDB repositories in packages com.zee.cms.mw.indexer."}
{"timestamp":"2023-06-12T06:10:09.594Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/repository/newSolr/Zee5MainCollectionRepository.class]"}
{"timestamp":"2023-06-12T06:10:09.594Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/repository/newSolr/Zee5MainCollectionV2Repository.class]"}
{"timestamp":"2023-06-12T06:10:09.594Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/repository/secondMasterSolr/Zee5MainCollectionV2A2Repository.class]"}
{"timestamp":"2023-06-12T06:10:09.595Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/repository/secondMasterSolr/Zee5MainCollectionMaster2Repository.class]"}
{"timestamp":"2023-06-12T06:10:09.598Z","level":"INFO","class":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.zee.cms.mw.indexer.repository.newSolr.Zee5MainCollectionRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository."}
{"timestamp":"2023-06-12T06:10:09.598Z","level":"INFO","class":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.zee.cms.mw.indexer.repository.newSolr.Zee5MainCollectionV2Repository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository."}
{"timestamp":"2023-06-12T06:10:09.598Z","level":"INFO","class":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.zee.cms.mw.indexer.repository.secondMasterSolr.Zee5MainCollectionV2A2Repository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository."}
{"timestamp":"2023-06-12T06:10:09.599Z","level":"INFO","class":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.zee.cms.mw.indexer.repository.secondMasterSolr.Zee5MainCollectionMaster2Repository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository."}
{"timestamp":"2023-06-12T06:10:09.599Z","level":"INFO","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces."}
{"timestamp":"2023-06-12T06:10:10.891Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Overriding bean definition for bean 'awsS3ResourceLoaderProperties' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=io.awspring.cloud.autoconfigure.context.ContextResourceLoaderAutoConfiguration; factoryMethodName=awsS3ResourceLoaderProperties; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [io/awspring/cloud/autoconfigure/context/ContextResourceLoaderAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.aws.autoconfigure.context.ContextResourceLoaderAutoConfiguration; factoryMethodName=awsS3ResourceLoaderProperties; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/aws/autoconfigure/context/ContextResourceLoaderAutoConfiguration.class]]"}
{"timestamp":"2023-06-12T06:10:10.974Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'refreshScope'"}
{"timestamp":"2023-06-12T06:10:10.978Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer'"}
{"timestamp":"2023-06-12T06:10:11.068Z","level":"DEBUG","class":"org.springframework.cloud.context.scope.GenericScope","message":"Generating bean factory id from names: [AmazonEc2InstanceDataPropertySourcePostProcessor, _relProvider, alpsController, alpsConverter, alpsJsonHttpMessageConverter, amazonCloudFormation, amazonS3, amazonSNS, amazonSNSAsync, amazonSQS, amazonSQSAsync, annotatedEventHandlerInvoker, annotationRelProvider, apache, apacheHttpClientBuilder, apacheHttpClientFactory, applicationAvailability, applicationJsonHalConfiguration, applicationTaskExecutor, associationLinks, auditableBeanWrapperFactory, availabilityProbesHealthEndpointGroupsPostProcessor, awsConfig, awsCredentialsProperties, awsS3ResourceLoaderProperties, backendIdConverterRegistry, backendIdHandlerMethodArgumentResolver, baseUri, basicErrorController, beanNameHandlerMapping, beanNameViewResolver, characterEncodingFilter, classLoaderMetrics, cloud.aws.credentials-io.awspring.cloud.autoconfigure.context.properties.AwsCredentialsProperties, cloud.aws.region-io.awspring.cloud.autoconfigure.context.properties.AwsRegionProperties, cloud.aws.sns-io.awspring.cloud.autoconfigure.messaging.SnsProperties, cloud.aws.sqs-io.awspring.cloud.autoconfigure.messaging.SqsProperties, cloud.aws.stack-io.awspring.cloud.autoconfigure.context.properties.AwsStackProperties, commonsFeatures, compositeCompatibilityVerifier, compositeDiscoveryClient, configDataContextRefresher, configurationPropertiesBeans, configurationPropertiesRebinder, confluent, confluentKafkaConsumerConfig, confluentKafkaProducerConfig, connManFactory, consumerFactory, controllerEndpointDiscoverer, controllerEndpointHandlerMapping, controllerExposeExcludePropertyEndpointFilter, conventionErrorViewResolver, credentialsProvider, customConversions, defaultConversionService, defaultMessageConverters, defaultRelProvider, defaultServletHandlerMapping, defaultViewResolver, defaultsBindHandlerAdvisor, delegatingEntityLinks, discoveryClientHealthIndicator, discoveryCompositeHealthContributor, diskSpaceHealthIndicator, diskSpaceMetrics, dispatcherServlet, dispatcherServletRegistration, eTagArgumentResolver, endpointCachingOperationInvokerAdvisor, endpointMediaTypes, endpointOperationParameterMapper, entityLinks, entityLinksPluginRegistry, enumTranslator, environmentManager, error, errorAttributes, errorPageCustomizer, errorPageRegistrarBeanPostProcessor, excerptProjector, feign.client-org.springframework.cloud.openfeign.FeignClientProperties, feign.encoder-org.springframework.cloud.openfeign.support.FeignEncoderProperties, feign.httpclient-org.springframework.cloud.openfeign.support.FeignHttpClientProperties, feignContext, feignFeature, feignTargeter, fileDescriptorMetrics, flashMapManager, formContentFilter, gridFsTemplate, gson, gsonBuilder, halFormsJacksonHttpMessageConverter, halFormsLinkDiscoverer, halFormsTemplatePropertyWriter, halJacksonHttpMessageConverter, halLinkDisocoverer, handlerExceptionResolver, handlerFunctionAdapter, healthContributorRegistry, healthEndpoint, healthEndpointGroups, healthEndpointGroupsBeanPostProcessor, healthEndpointWebExtension, healthEndpointWebMvcHandlerMapping, healthHttpCodeStatusMapper, healthStatusAggregator, httpHeadersPreparer, httpRequestHandlerAdapter, hypermediaRepresentionModelProcessorConfigurator, hypermediaRestTemplateBeanPostProcessor, hypermediaRestTemplateConfigurer, hypermediaWebMvcConfigurer, hypermediaWebMvcConverters, indexerController, indexerListener, inetUtils, inetUtilsProperties, io.awspring.cloud.autoconfigure.context.ContextCredentialsAutoConfiguration, io.awspring.cloud.autoconfigure.context.ContextRegionProviderAutoConfiguration, io.awspring.cloud.autoconfigure.context.ContextResourceLoaderAutoConfiguration, io.awspring.cloud.autoconfigure.context.ContextStackAutoConfiguration, io.awspring.cloud.autoconfigure.messaging.SnsAutoConfiguration, io.awspring.cloud.autoconfigure.messaging.SnsAutoConfiguration$SnsWebConfiguration, io.awspring.cloud.autoconfigure.messaging.SqsAutoConfiguration, io.awspring.cloud.autoconfigure.messaging.SqsAutoConfiguration$SqsClientConfiguration, io.awspring.cloud.autoconfigure.messaging.SqsAutoConfiguration$SqsConfiguration, io.awspring.cloud.context.support.io.SimpleStorageProtocolResolverConfigurer#0, io.awspring.cloud.core.env.ResourceIdResolver.BEAN_NAME, jacksonGeoModule, jacksonHttpMessageConverter, jacksonObjectMapperBuilder, jettyConnectionMetricsBinder, jettyServerThreadPoolMetricsBinder, jettyWebServerFactoryCustomizer, jpaHelper, jsonComponentModule, jsonSchemaConverter, jvmGcMetrics, jvmHeapPressureMetrics, jvmMemoryMetrics, jvmThreadMetrics, kafkaAdmin, kafkaConfig, kafkaConsumer, kafkaConsumerMetrics, kafkaListenerContainerFactory, kafkaListenerContainerFactoryConfigurer, kafkaProducer, kafkaProducerFactory, kafkaProducerListener, kafkaProducerMetrics, kafkaStreamsMetrics, lifecycleProcessor, linkCollector, linkDiscovererRegistry, linkDiscoverers, livenessStateHealthIndicator, loadBalancerClientsDefaultsMappingsProvider, localeCharsetMappingsCustomizer, localeResolver, log4j2Metrics, loggingRebinder, management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties, management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties, management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties, management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties, management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties, management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties, management.metrics.export.simple-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties, management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties, managementServletContext, mapper, mappingJackson2HttpMessageConverter, mappingMongoConverter, messageConverters, messageResolver, messagingConfig, metadataConfiguration, meterRegistryPostProcessor, metricsHttpClientUriTagFilter, metricsHttpServerUriTagFilter, metricsRepositoryMethodInvocationListener, metricsRepositoryMethodInvocationListenerBeanPostProcessor, metricsRestTemplateCustomizer, metricsWebMvcConfigurer, micrometerClock, mongo, mongoClientSettings, mongoCommandTagsProvider, mongoConnectionPoolTagsProvider, mongoCustomConversions, mongoDBService, mongoDatabaseFactory, mongoHealthContributor, mongoMappingContext, mongoMetricsCommandListener, mongoMetricsCommandListenerClientSettingsBuilderCustomizer, mongoMetricsConnectionPoolListener, mongoMetricsConnectionPoolListenerClientSettingsBuilderCustomizer, mongoPropertiesCustomizer, mongoTemplate, multipartConfigElement, multipartResolver, mvcContentNegotiationManager, mvcConversionService, mvcHandlerMappingIntrospector, mvcPathMatcher, mvcPatternParser, mvcResourceUrlProvider, mvcUriComponentsContributor, mvcUrlPathHelper, mvcValidator, mvcViewResolver, mwIndexerServiceApplication, newIndexerServiceImpl, newIndexerServiceV2CoreImpl, newSolrConfig, newSolrTemplate, notificationConfig, notificationMessagingTemplate, notificationPublisher, notificationServiceImpl, org.springframework.aop.config.internalAutoProxyCreator, org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration, org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration$KafkaStreamsMetricsConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.Log4J2MetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration$MongoCommandMetricsConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration$MongoConnectionPoolMetricsConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.web.jetty.JettyMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.mongo.MongoHealthContributorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.solr.SolrHealthContributorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration, org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration, org.springframework.boot.autoconfigure.AutoConfigurationPackages, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration, org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration, org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration, org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration, org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration, org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoDatabaseFactoryConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoDatabaseFactoryDependentConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration, org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration, org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration, org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration$EnableKafkaConfiguration, org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration, org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration, org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration$MongoClientSettingsConfiguration, org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration, org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$JettyWebServerFactoryCustomizerConfiguration, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration, org.springframework.boot.autoconfigure.we2023-06-12T06:10:11.069795510Z b.servlet.ServletWebServerFactoryAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConf…"}
{"timestamp":"2023-06-12T06:10:11.072Z","level":"INFO","class":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=28dc51f7-9d63-3846-98b3-a45e5b35b0a6"}
{"timestamp":"2023-06-12T06:10:11.073Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'"}
{"timestamp":"2023-06-12T06:10:11.074Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'AmazonEc2InstanceDataPropertySourcePostProcessor'"}
{"timestamp":"2023-06-12T06:10:11.083Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'io.awspring.cloud.context.support.io.SimpleStorageProtocolResolverConfigurer#0'"}
{"timestamp":"2023-06-12T06:10:11.086Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'"}
{"timestamp":"2023-06-12T06:10:11.086Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.cloud.aws.context.support.io.SimpleStorageProtocolResolverConfigurer#0'"}
{"timestamp":"2023-06-12T06:10:12.099Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'"}
{"timestamp":"2023-06-12T06:10:12.100Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'"}
{"timestamp":"2023-06-12T06:10:12.101Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'"}
{"timestamp":"2023-06-12T06:10:12.104Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'"}
{"timestamp":"2023-06-12T06:10:12.106Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'"}
{"timestamp":"2023-06-12T06:10:12.110Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'"}
{"timestamp":"2023-06-12T06:10:12.111Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'"}
{"timestamp":"2023-06-12T06:10:12.111Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'"}
{"timestamp":"2023-06-12T06:10:12.111Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'"}
{"timestamp":"2023-06-12T06:10:12.113Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'"}
{"timestamp":"2023-06-12T06:10:12.149Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'"}
{"timestamp":"2023-06-12T06:10:12.156Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'"}
{"timestamp":"2023-06-12T06:10:12.160Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor'"}
{"timestamp":"2023-06-12T06:10:12.171Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'"}
{"timestamp":"2023-06-12T06:10:12.172Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'"}
{"timestamp":"2023-06-12T06:10:12.172Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'healthEndpointGroupsBeanPostProcessor'"}
{"timestamp":"2023-06-12T06:10:12.206Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'meterRegistryPostProcessor'"}
{"timestamp":"2023-06-12T06:10:12.206Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'meterRegistryPostProcessor' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@203dd56b'"}
{"timestamp":"2023-06-12T06:10:12.207Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'metricsRepositoryMethodInvocationListenerBeanPostProcessor'"}
{"timestamp":"2023-06-12T06:10:12.208Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'hypermediaRepresentionModelProcessorConfigurator'"}
{"timestamp":"2023-06-12T06:10:12.209Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'hypermediaRestTemplateBeanPostProcessor'"}
{"timestamp":"2023-06-12T06:10:12.209Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'projectionDefinitionRegistrar'"}
{"timestamp":"2023-06-12T06:10:12.211Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'annotatedEventHandlerInvoker'"}
{"timestamp":"2023-06-12T06:10:12.212Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'configurationPropertiesBeans'"}
{"timestamp":"2023-06-12T06:10:12.214Z","level":"DEBUG","class":"org.springframework.ui.context.support.UiApplicationContextUtils","message":"Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@78cd163b]"}
{"timestamp":"2023-06-12T06:10:12.215Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'tomcatServletWebServerFactory'"}
{"timestamp":"2023-06-12T06:10:12.215Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'"}
{"timestamp":"2023-06-12T06:10:12.284Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'"}
{"timestamp":"2023-06-12T06:10:12.285Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.289Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'"}
{"timestamp":"2023-06-12T06:10:12.289Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.291Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'"}
{"timestamp":"2023-06-12T06:10:12.300Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'"}
{"timestamp":"2023-06-12T06:10:12.303Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'defaultsBindHandlerAdvisor'"}
{"timestamp":"2023-06-12T06:10:12.338Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.341Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'loadBalancerClientsDefaultsMappingsProvider'"}
{"timestamp":"2023-06-12T06:10:12.341Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.346Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'defaultsBindHandlerAdvisor' via factory method to bean named 'loadBalancerClientsDefaultsMappingsProvider'"}
{"timestamp":"2023-06-12T06:10:12.356Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CONTEXT_PATH' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:12.357Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'"}
{"timestamp":"2023-06-12T06:10:12.360Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'"}
{"timestamp":"2023-06-12T06:10:12.361Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'"}
{"timestamp":"2023-06-12T06:10:12.364Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'jettyWebServerFactoryCustomizer'"}
{"timestamp":"2023-06-12T06:10:12.364Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$JettyWebServerFactoryCustomizerConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.366Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'jettyWebServerFactoryCustomizer' via factory method to bean named 'environment'"}
{"timestamp":"2023-06-12T06:10:12.366Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'jettyWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'"}
{"timestamp":"2023-06-12T06:10:12.370Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'"}
{"timestamp":"2023-06-12T06:10:12.370Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.372Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'"}
{"timestamp":"2023-06-12T06:10:12.372Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'"}
{"timestamp":"2023-06-12T06:10:12.375Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'"}
{"timestamp":"2023-06-12T06:10:12.375Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.376Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'"}
{"timestamp":"2023-06-12T06:10:12.438Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'errorPageCustomizer'"}
{"timestamp":"2023-06-12T06:10:12.439Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.439Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'"}
{"timestamp":"2023-06-12T06:10:12.442Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'dispatcherServletRegistration'"}
{"timestamp":"2023-06-12T06:10:12.442Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.444Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'dispatcherServlet'"}
{"timestamp":"2023-06-12T06:10:12.444Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.446Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'"}
{"timestamp":"2023-06-12T06:10:12.451Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'"}
{"timestamp":"2023-06-12T06:10:12.471Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'"}
{"timestamp":"2023-06-12T06:10:12.471Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'"}
{"timestamp":"2023-06-12T06:10:12.472Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'multipartConfigElement'"}
{"timestamp":"2023-06-12T06:10:12.473Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.473Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'"}
{"timestamp":"2023-06-12T06:10:12.478Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'"}
{"timestamp":"2023-06-12T06:10:12.488Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'"}
{"timestamp":"2023-06-12T06:10:12.575Z","level":"DEBUG","class":"org.springframework.boot.web.servlet.server.DocumentRoot","message":"Code archive: /application/mw-indexer-service-jar.jar"}
{"timestamp":"2023-06-12T06:10:12.575Z","level":"DEBUG","class":"org.springframework.boot.web.servlet.server.DocumentRoot","message":"Code archive: /application/mw-indexer-service-jar.jar"}
{"timestamp":"2023-06-12T06:10:12.576Z","level":"DEBUG","class":"org.springframework.boot.web.servlet.server.DocumentRoot","message":"None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored."}
{"timestamp":"2023-06-12T06:10:12.592Z","level":"INFO","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port(s): 8090 (http)"}
Jun 12, 2023 6:10:12 AM org.apache.coyote.AbstractProtocol init
INFO: Initializing ProtocolHandler ["http-nio-8090"]
Jun 12, 2023 6:10:12 AM org.apache.catalina.core.StandardService startInternal
INFO: Starting service [Tomcat]
Jun 12, 2023 6:10:12 AM org.apache.catalina.core.StandardEngine startInternal
INFO: Starting Servlet engine: [Apache Tomcat/9.0.62]
Jun 12, 2023 6:10:12 AM org.apache.catalina.core.ApplicationContext log
INFO: Initializing Spring embedded WebApplicationContext
{"timestamp":"2023-06-12T06:10:12.673Z","level":"DEBUG","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]"}
{"timestamp":"2023-06-12T06:10:12.674Z","level":"INFO","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 4622 ms"}
{"timestamp":"2023-06-12T06:10:12.676Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'webMvcMetricsFilter'"}
{"timestamp":"2023-06-12T06:10:12.676Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.677Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'"}
{"timestamp":"2023-06-12T06:10:12.682Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration' via constructor to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'"}
{"timestamp":"2023-06-12T06:10:12.684Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'simpleMeterRegistry'"}
{"timestamp":"2023-06-12T06:10:12.685Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.687Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'simpleConfig'"}
{"timestamp":"2023-06-12T06:10:12.687Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'management.metrics.export.simple-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties'"}
{"timestamp":"2023-06-12T06:10:12.689Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'simpleConfig' via factory method to bean named 'management.metrics.export.simple-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties'"}
{"timestamp":"2023-06-12T06:10:12.696Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'micrometerClock'"}
{"timestamp":"2023-06-12T06:10:12.696Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.699Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'simpleMeterRegistry' via factory method to bean named 'simpleConfig'"}
{"timestamp":"2023-06-12T06:10:12.699Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'simpleMeterRegistry' via factory method to bean named 'micrometerClock'"}
{"timestamp":"2023-06-12T06:10:12.745Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'propertiesMeterFilter'"}
{"timestamp":"2023-06-12T06:10:12.745Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'propertiesMeterFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'"}
{"timestamp":"2023-06-12T06:10:12.749Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'metricsHttpClientUriTagFilter'"}
{"timestamp":"2023-06-12T06:10:12.749Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.751Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'metricsHttpClientUriTagFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'"}
{"timestamp":"2023-06-12T06:10:12.754Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'metricsHttpServerUriTagFilter'"}
{"timestamp":"2023-06-12T06:10:12.755Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'jvmGcMetrics'"}
{"timestamp":"2023-06-12T06:10:12.755Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.774Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'jvmHeapPressureMetrics'"}
{"timestamp":"2023-06-12T06:10:12.778Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'jvmMemoryMetrics'"}
{"timestamp":"2023-06-12T06:10:12.781Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'jvmThreadMetrics'"}
{"timestamp":"2023-06-12T06:10:12.783Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'classLoaderMetrics'"}
{"timestamp":"2023-06-12T06:10:12.785Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'log4j2Metrics'"}
{"timestamp":"2023-06-12T06:10:12.785Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.Log4J2MetricsAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.789Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'uptimeMetrics'"}
{"timestamp":"2023-06-12T06:10:12.789Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.793Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'processorMetrics'"}
{"timestamp":"2023-06-12T06:10:12.796Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'fileDescriptorMetrics'"}
{"timestamp":"2023-06-12T06:10:12.798Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'diskSpaceMetrics'"}
{"timestamp":"2023-06-12T06:10:12.799Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'diskSpaceMetrics' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'"}
{"timestamp":"2023-06-12T06:10:12.853Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'webMvcTagsProvider'"}
{"timestamp":"2023-06-12T06:10:12.856Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'webMvcMetricsFilter' via factory method to bean named 'simpleMeterRegistry'"}
{"timestamp":"2023-06-12T06:10:12.857Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'webMvcMetricsFilter' via factory method to bean named 'webMvcTagsProvider'"}
{"timestamp":"2023-06-12T06:10:12.863Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'servletEndpointRegistrar'"}
{"timestamp":"2023-06-12T06:10:12.863Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.865Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'"}
{"timestamp":"2023-06-12T06:10:12.869Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'servletEndpointDiscoverer'"}
{"timestamp":"2023-06-12T06:10:12.870Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.871Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'servletEndpointDiscoverer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@203dd56b'"}
{"timestamp":"2023-06-12T06:10:12.873Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'webEndpointPathMapper'"}
{"timestamp":"2023-06-12T06:10:12.873Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.873Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@203dd56b'"}
{"timestamp":"2023-06-12T06:10:12.873Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' via constructor to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'"}
{"timestamp":"2023-06-12T06:10:12.878Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'servletExposeExcludePropertyEndpointFilter'"}
{"timestamp":"2023-06-12T06:10:12.879Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.880Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'servletExposeExcludePropertyEndpointFilter' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'"}
{"timestamp":"2023-06-12T06:10:12.890Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'"}
{"timestamp":"2023-06-12T06:10:12.890Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'servletEndpointDiscoverer'"}
{"timestamp":"2023-06-12T06:10:12.890Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'dispatcherServletRegistration'"}
{"timestamp":"2023-06-12T06:10:12.903Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'requestContextFilter'"}
{"timestamp":"2023-06-12T06:10:12.950Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'formContentFilter'"}
{"timestamp":"2023-06-12T06:10:12.950Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:12.966Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'characterEncodingFilter'"}
{"timestamp":"2023-06-12T06:10:12.980Z","level":"DEBUG","class":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","message":"Mapping filters: filterRegistrationBean urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105"}
{"timestamp":"2023-06-12T06:10:12.981Z","level":"DEBUG","class":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","message":"Mapping servlets: dispatcherServlet urls=[/]"}
{"timestamp":"2023-06-12T06:10:12.997Z","level":"DEBUG","class":"org.springframework.web.filter.GenericFilterBean","message":"Filter 'webMvcMetricsFilter' configured for use"}
{"timestamp":"2023-06-12T06:10:12.998Z","level":"DEBUG","class":"org.springframework.web.filter.GenericFilterBean","message":"Filter 'requestContextFilter' configured for use"}
{"timestamp":"2023-06-12T06:10:12.998Z","level":"DEBUG","class":"org.springframework.web.filter.GenericFilterBean","message":"Filter 'characterEncodingFilter' configured for use"}
{"timestamp":"2023-06-12T06:10:12.998Z","level":"DEBUG","class":"org.springframework.web.filter.GenericFilterBean","message":"Filter 'formContentFilter' configured for use"}
{"timestamp":"2023-06-12T06:10:13.004Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$JpaInvokerConfiguration'"}
{"timestamp":"2023-06-12T06:10:13.042Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'mwIndexerServiceApplication'"}
{"timestamp":"2023-06-12T06:10:13.046Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'mongoDBService'"}
{"timestamp":"2023-06-12T06:10:13.051Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'mongoTemplate'"}
{"timestamp":"2023-06-12T06:10:13.051Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDatabaseFactoryDependentConfiguration'"}
{"timestamp":"2023-06-12T06:10:13.051Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties'"}
{"timestamp":"2023-06-12T06:10:13.054Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'AUTH_DATABASE' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:13.054Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_MONGO_MW_DB' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:13.055Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_MONGO_HOST' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:13.057Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_MONGO_PWD' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:13.058Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_MONGO_PORT' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:13.059Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_MONGO_USER' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:13.059Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.mongo.MongoDatabaseFactoryDependentConfiguration' via constructor to bean named 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties'"}
{"timestamp":"2023-06-12T06:10:13.061Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'mongoDatabaseFactory'"}
{"timestamp":"2023-06-12T06:10:13.061Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDatabaseFactoryConfiguration'"}
{"timestamp":"2023-06-12T06:10:13.063Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'mongo'"}
{"timestamp":"2023-06-12T06:10:13.063Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:13.065Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'mongoClientSettings'"}
{"timestamp":"2023-06-12T06:10:13.065Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration$MongoClientSettingsConfiguration'"}
{"timestamp":"2023-06-12T06:10:13.102Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mongo' via factory method to bean named 'mongoClientSettings'"}
{"timestamp":"2023-06-12T06:10:13.103Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'mongoMetricsConnectionPoolListenerClientSettingsBuilderCustomizer'"}
{"timestamp":"2023-06-12T06:10:13.103Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration$MongoConnectionPoolMetricsConfiguration'"}
{"timestamp":"2023-06-12T06:10:13.105Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'mongoMetricsConnectionPoolListener'"}
{"timestamp":"2023-06-12T06:10:13.106Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'mongoConnectionPoolTagsProvider'"}
{"timestamp":"2023-06-12T06:10:13.108Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mongoMetricsConnectionPoolListener' via factory method to bean named 'simpleMeterRegistry'"}
{"timestamp":"2023-06-12T06:10:13.108Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mongoMetricsConnectionPoolListener' via factory method to bean named 'mongoConnectionPoolTagsProvider'"}
{"timestamp":"2023-06-12T06:10:13.112Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mongoMetricsConnectionPoolListenerClientSettingsBuilderCustomizer' via factory method to bean named 'mongoMetricsConnectionPoolListener'"}
{"timestamp":"2023-06-12T06:10:13.114Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'mongoMetricsCommandListenerClientSettingsBuilderCustomizer'"}
{"timestamp":"2023-06-12T06:10:13.114Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration$MongoCommandMetricsConfiguration'"}
{"timestamp":"2023-06-12T06:10:13.116Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'mongoMetricsCommandListener'"}
{"timestamp":"2023-06-12T06:10:13.139Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'mongoCommandTagsProvider'"}
{"timestamp":"2023-06-12T06:10:13.142Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mongoMetricsCommandListener' via factory method to bean named 'simpleMeterRegistry'"}
{"timestamp":"2023-06-12T06:10:13.142Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mongoMetricsCommandListener' via factory method to bean named 'mongoCommandTagsProvider'"}
{"timestamp":"2023-06-12T06:10:13.144Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mongoMetricsCommandListenerClientSettingsBuilderCustomizer' via factory method to bean named 'mongoMetricsCommandListener'"}
{"timestamp":"2023-06-12T06:10:13.146Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'mongoPropertiesCustomizer'"}
{"timestamp":"2023-06-12T06:10:13.147Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mongoPropertiesCustomizer' via factory method to bean named 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties'"}
{"timestamp":"2023-06-12T06:10:13.147Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mongoPropertiesCustomizer' via factory method to bean named 'environment'"}
{"timestamp":"2023-06-12T06:10:13.167Z","level":"INFO","class":"com.mongodb.diagnostics.logging.SLF4JLogger","message":"Cluster created with settings {hosts=[10.189.45.16:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}"}
{"timestamp":"2023-06-12T06:10:13.203Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mongoDatabaseFactory' via factory method to bean named 'mongo'"}
{"timestamp":"2023-06-12T06:10:13.203Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mongoDatabaseFactory' via factory method to bean named 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties'"}
{"timestamp":"2023-06-12T06:10:13.258Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'mappingMongoConverter'"}
{"timestamp":"2023-06-12T06:10:13.260Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'mongoMappingContext'"}
{"timestamp":"2023-06-12T06:10:13.261Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration'"}
{"timestamp":"2023-06-12T06:10:13.264Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'mongoCustomConversions'"}
{"timestamp":"2023-06-12T06:10:13.265Z","level":"INFO","class":"com.mongodb.diagnostics.logging.SLF4JLogger","message":"Opened connection [connectionId{localValue:2, serverValue:8950}] to 10.189.45.16:27017"}
{"timestamp":"2023-06-12T06:10:13.265Z","level":"INFO","class":"com.mongodb.diagnostics.logging.SLF4JLogger","message":"Opened connection [connectionId{localValue:1, serverValue:8951}] to 10.189.45.16:27017"}
{"timestamp":"2023-06-12T06:10:13.266Z","level":"INFO","class":"com.mongodb.diagnostics.logging.SLF4JLogger","message":"Monitor thread successfully connected to server with description ServerDescription{address=10.189.45.16:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=61187275}"}
{"timestamp":"2023-06-12T06:10:13.384Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Locale to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.385Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Character to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.385Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.math.BigDecimal to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.386Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.math.BigDecimal to class org.bson.types.Decimal128 as writing converter."}
{"timestamp":"2023-06-12T06:10:13.386Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.math.BigDecimal as reading converter."}
{"timestamp":"2023-06-12T06:10:13.386Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.types.Decimal128 to class java.math.BigDecimal as reading converter."}
{"timestamp":"2023-06-12T06:10:13.386Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.math.BigInteger to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.386Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.math.BigInteger as reading converter."}
{"timestamp":"2023-06-12T06:10:13.387Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.net.URL to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.387Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.net.URL as reading converter."}
{"timestamp":"2023-06-12T06:10:13.387Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class java.lang.String as reading converter."}
{"timestamp":"2023-06-12T06:10:13.387Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.mongodb.core.query.Term to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.387Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.mongodb.core.script.NamedMongoScript to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.387Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.script.NamedMongoScript as reading converter."}
{"timestamp":"2023-06-12T06:10:13.387Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Currency to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.388Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.util.Currency as reading converter."}
{"timestamp":"2023-06-12T06:10:13.388Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.concurrent.atomic.AtomicInteger to class java.lang.Integer as writing converter."}
{"timestamp":"2023-06-12T06:10:13.388Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.concurrent.atomic.AtomicLong to class java.lang.Long as writing converter."}
{"timestamp":"2023-06-12T06:10:13.388Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Long to class java.util.concurrent.atomic.AtomicLong as reading converter."}
{"timestamp":"2023-06-12T06:10:13.388Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Integer to class java.util.concurrent.atomic.AtomicInteger as reading converter."}
{"timestamp":"2023-06-12T06:10:13.388Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.types.Binary to class [B as reading converter."}
{"timestamp":"2023-06-12T06:10:13.388Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.BsonTimestamp to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:13.389Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.net.URI as reading converter."}
{"timestamp":"2023-06-12T06:10:13.389Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.net.URI to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.389Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDate to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.389Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.389Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.DateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.389Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:13.390Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:13.390Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.DateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:13.390Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:13.390Z","level":"WARN","class":"org.springframework.data.convert.CustomConversions","message":"Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation."}
{"timestamp":"2023-06-12T06:10:13.390Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class org.joda.time.DateTime as writing converter."}
{"timestamp":"2023-06-12T06:10:13.390Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class org.joda.time.LocalDateTime as writing converter."}
{"timestamp":"2023-06-12T06:10:13.391Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.time.Instant as writing converter."}
{"timestamp":"2023-06-12T06:10:13.391Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.time.LocalDateTime as writing converter."}
{"timestamp":"2023-06-12T06:10:13.391Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.geo.Box to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.391Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.geo.Polygon to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.391Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.geo.Circle to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.391Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.mongodb.core.geo.Sphere to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.391Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.geo.Box as reading converter."}
{"timestamp":"2023-06-12T06:10:13.392Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.geo.Polygon as reading converter."}
{"timestamp":"2023-06-12T06:10:13.392Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.geo.Circle as reading converter."}
{"timestamp":"2023-06-12T06:10:13.392Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.Sphere as reading converter."}
{"timestamp":"2023-06-12T06:10:13.392Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.geo.Point as reading converter."}
{"timestamp":"2023-06-12T06:10:13.392Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.geo.Point to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.393Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.mongodb.core.query.GeoCommand to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.393Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from interface org.springframework.data.mongodb.core.geo.GeoJson to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.393Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.mongodb.core.geo.GeoJsonPoint to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.393Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.mongodb.core.geo.GeoJsonPolygon to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.393Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonPoint as reading converter."}
{"timestamp":"2023-06-12T06:10:13.393Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonPolygon as reading converter."}
{"timestamp":"2023-06-12T06:10:13.394Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonLineString as reading converter."}
{"timestamp":"2023-06-12T06:10:13.394Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonMultiLineString as reading converter."}
{"timestamp":"2023-06-12T06:10:13.394Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonMultiPoint as reading converter."}
{"timestamp":"2023-06-12T06:10:13.394Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonMultiPolygon as reading converter."}
{"timestamp":"2023-06-12T06:10:13.394Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonGeometryCollection as reading converter."}
{"timestamp":"2023-06-12T06:10:13.395Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to interface org.springframework.data.mongodb.core.geo.GeoJson as reading converter."}
{"timestamp":"2023-06-12T06:10:13.395Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDate to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.395Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.395Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.DateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.395Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:13.395Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:13.395Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.DateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:13.396Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Skipping converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter. class java.time.LocalDateTime is not a store supported simple type!"}
{"timestamp":"2023-06-12T06:10:13.396Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Skipping converter from class java.time.LocalDateTime to class org.joda.time.DateTime as writing converter. class org.joda.time.DateTime is not a store supported simple type!"}
{"timestamp":"2023-06-12T06:10:13.396Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Skipping converter from class java.time.Instant to class org.joda.time.LocalDateTime as writing converter. class org.joda.time.LocalDateTime is not a store supported simple type!"}
{"timestamp":"2023-06-12T06:10:13.396Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Skipping converter from class org.joda.time.LocalDateTime to class java.time.Instant as writing converter. class java.time.Instant is not a store supported simple type!"}
{"timestamp":"2023-06-12T06:10:13.396Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Skipping converter from class org.joda.time.LocalDateTime to class java.time.LocalDateTime as writing converter. class java.time.LocalDateTime is not a store supported simple type!"}
{"timestamp":"2023-06-12T06:10:13.396Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:13.397Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.397Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:13.397Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.397Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter."}
{"timestamp":"2023-06-12T06:10:13.397Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.397Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:13.398Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.398Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Skipping converter from class java.time.LocalDateTime to class java.time.Instant as reading converter. class java.time.LocalDateTime is not a store supported simple type!"}
{"timestamp":"2023-06-12T06:10:13.398Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Skipping converter from class java.time.Instant to class java.time.LocalDateTime as reading converter. class java.time.Instant is not a store supported simple type!"}
{"timestamp":"2023-06-12T06:10:13.398Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.398Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter."}
{"timestamp":"2023-06-12T06:10:13.398Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.399Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter."}
{"timestamp":"2023-06-12T06:10:13.399Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.399Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter."}
{"timestamp":"2023-06-12T06:10:13.399Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:13.399Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:13.399Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:13.403Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mongoMappingContext' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@203dd56b'"}
{"timestamp":"2023-06-12T06:10:13.403Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mongoMappingContext' via factory method to bean named 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties'"}
{"timestamp":"2023-06-12T06:10:13.404Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mongoMappingContext' via factory method to bean named 'mongoCustomConversions'"}
{"timestamp":"2023-06-12T06:10:13.449Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/entity/AssetWeightData.class]"}
{"timestamp":"2023-06-12T06:10:13.449Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/entity/ProcessedAssetData.class]"}
{"timestamp":"2023-06-12T06:10:13.449Z","level":"DEBUG","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","message":"Identified candidate component class: URL [jar:file:/application/mw-indexer-service-jar.jar!/BOOT-INF/classes!/com/zee/cms/mw/indexer/entity/AssetData.class]"}
{"timestamp":"2023-06-12T06:10:13.496Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'refreshEventListener'"}
{"timestamp":"2023-06-12T06:10:13.496Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:13.499Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'configDataContextRefresher'"}
{"timestamp":"2023-06-12T06:10:13.500Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'spring.cloud.refresh-org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties'"}
{"timestamp":"2023-06-12T06:10:13.503Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'configDataContextRefresher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@203dd56b'"}
{"timestamp":"2023-06-12T06:10:13.503Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'configDataContextRefresher' via factory method to bean named 'refreshScope'"}
{"timestamp":"2023-06-12T06:10:13.503Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'configDataContextRefresher' via factory method to bean named 'spring.cloud.refresh-org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties'"}
{"timestamp":"2023-06-12T06:10:13.506Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'refreshEventListener' via factory method to bean named 'configDataContextRefresher'"}
{"timestamp":"2023-06-12T06:10:13.541Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'startupTimeMetrics'"}
{"timestamp":"2023-06-12T06:10:13.541Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:13.542Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'startupTimeMetrics' via factory method to bean named 'simpleMeterRegistry'"}
{"timestamp":"2023-06-12T06:10:13.554Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mappingMongoConverter' via factory method to bean named 'mongoDatabaseFactory'"}
{"timestamp":"2023-06-12T06:10:13.554Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mappingMongoConverter' via factory method to bean named 'mongoMappingContext'"}
{"timestamp":"2023-06-12T06:10:13.554Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mappingMongoConverter' via factory method to bean named 'mongoCustomConversions'"}
{"timestamp":"2023-06-12T06:10:13.561Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Locale to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.561Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Character to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.561Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.math.BigDecimal to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.561Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.math.BigDecimal to class org.bson.types.Decimal128 as writing converter."}
{"timestamp":"2023-06-12T06:10:13.561Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.math.BigDecimal as reading converter."}
{"timestamp":"2023-06-12T06:10:13.561Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.types.Decimal128 to class java.math.BigDecimal as reading converter."}
{"timestamp":"2023-06-12T06:10:13.561Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.math.BigInteger to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.562Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.math.BigInteger as reading converter."}
{"timestamp":"2023-06-12T06:10:13.562Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.net.URL to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.562Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.net.URL as reading converter."}
{"timestamp":"2023-06-12T06:10:13.562Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class java.lang.String as reading converter."}
{"timestamp":"2023-06-12T06:10:13.562Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.mongodb.core.query.Term to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.562Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.mongodb.core.script.NamedMongoScript to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.562Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.script.NamedMongoScript as reading converter."}
{"timestamp":"2023-06-12T06:10:13.562Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Currency to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.563Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.util.Currency as reading converter."}
{"timestamp":"2023-06-12T06:10:13.563Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.concurrent.atomic.AtomicInteger to class java.lang.Integer as writing converter."}
{"timestamp":"2023-06-12T06:10:13.563Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.concurrent.atomic.AtomicLong to class java.lang.Long as writing converter."}
{"timestamp":"2023-06-12T06:10:13.563Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Long to class java.util.concurrent.atomic.AtomicLong as reading converter."}
{"timestamp":"2023-06-12T06:10:13.563Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Integer to class java.util.concurrent.atomic.AtomicInteger as reading converter."}
{"timestamp":"2023-06-12T06:10:13.563Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.types.Binary to class [B as reading converter."}
{"timestamp":"2023-06-12T06:10:13.563Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.BsonTimestamp to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:13.563Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.net.URI as reading converter."}
{"timestamp":"2023-06-12T06:10:13.564Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.net.URI to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.564Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDate to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.564Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.564Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.DateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.564Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:13.564Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:13.565Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.DateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:13.565Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:13.565Z","level":"WARN","class":"org.springframework.data.convert.CustomConversions","message":"Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation."}
{"timestamp":"2023-06-12T06:10:13.565Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class org.joda.time.DateTime as writing converter."}
{"timestamp":"2023-06-12T06:10:13.565Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class org.joda.time.LocalDateTime as writing converter."}
{"timestamp":"2023-06-12T06:10:13.565Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.time.Instant as writing converter."}
{"timestamp":"2023-06-12T06:10:13.565Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.time.LocalDateTime as writing converter."}
{"timestamp":"2023-06-12T06:10:13.565Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.geo.Box to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.566Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.geo.Polygon to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.566Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.geo.Circle to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.566Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.mongodb.core.geo.Sphere to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.566Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.geo.Box as reading converter."}
{"timestamp":"2023-06-12T06:10:13.566Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.geo.Polygon as reading converter."}
{"timestamp":"2023-06-12T06:10:13.566Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.geo.Circle as reading converter."}
{"timestamp":"2023-06-12T06:10:13.566Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.Sphere as reading converter."}
{"timestamp":"2023-06-12T06:10:13.566Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.geo.Point as reading converter."}
{"timestamp":"2023-06-12T06:10:13.567Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.geo.Point to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.567Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.mongodb.core.query.GeoCommand to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.567Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from interface org.springframework.data.mongodb.core.geo.GeoJson to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.567Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.mongodb.core.geo.GeoJsonPoint to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.567Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.mongodb.core.geo.GeoJsonPolygon to class org.bson.Document as writing converter."}
{"timestamp":"2023-06-12T06:10:13.567Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonPoint as reading converter."}
{"timestamp":"2023-06-12T06:10:13.567Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonPolygon as reading converter."}
{"timestamp":"2023-06-12T06:10:13.567Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonLineString as reading converter."}
{"timestamp":"2023-06-12T06:10:13.567Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonMultiLineString as reading converter."}
{"timestamp":"2023-06-12T06:10:13.568Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonMultiPoint as reading converter."}
{"timestamp":"2023-06-12T06:10:13.568Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonMultiPolygon as reading converter."}
{"timestamp":"2023-06-12T06:10:13.568Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonGeometryCollection as reading converter."}
{"timestamp":"2023-06-12T06:10:13.568Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.bson.Document to interface org.springframework.data.mongodb.core.geo.GeoJson as reading converter."}
{"timestamp":"2023-06-12T06:10:13.568Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDate to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.568Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.568Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.DateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.568Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:13.568Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:13.569Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.DateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:13.569Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Skipping converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter. class java.time.LocalDateTime is not a store supported simple type!"}
{"timestamp":"2023-06-12T06:10:13.569Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Skipping converter from class java.time.LocalDateTime to class org.joda.time.DateTime as writing converter. class org.joda.time.DateTime is not a store supported simple type!"}
{"timestamp":"2023-06-12T06:10:13.569Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Skipping converter from class java.time.Instant to class org.joda.time.LocalDateTime as writing converter. class org.joda.time.LocalDateTime is not a store supported simple type!"}
{"timestamp":"2023-06-12T06:10:13.569Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Skipping converter from class org.joda.time.LocalDateTime to class java.time.Instant as writing converter. class java.time.Instant is not a store supported simple type!"}
{"timestamp":"2023-06-12T06:10:13.569Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Skipping converter from class org.joda.time.LocalDateTime to class java.time.LocalDateTime as writing converter. class java.time.LocalDateTime is not a store supported simple type!"}
{"timestamp":"2023-06-12T06:10:13.569Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:13.569Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.569Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:13.570Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.570Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter."}
{"timestamp":"2023-06-12T06:10:13.570Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.570Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:13.570Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:13.570Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Skipping converter from class java.time.LocalDateTime to class java.time.Instant as reading converter. class java.time.LocalDateTime is not a store supported simple type!"}
{"timestamp":"2023-06-12T06:10:13.570Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Skipping converter from class java.time.Instant to class java.time.LocalDateTime as reading converter. class java.time.Instant is not a store supported simple type!"}
{"timestamp":"2023-06-12T06:10:13.570Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.570Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter."}
{"timestamp":"2023-06-12T06:10:13.571Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.571Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter."}
{"timestamp":"2023-06-12T06:10:13.571Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:13.571Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter."}
{"timestamp":"2023-06-12T06:10:13.571Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:13.571Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:13.571Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:13.599Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mongoTemplate' via factory method to bean named 'mongoDatabaseFactory'"}
{"timestamp":"2023-06-12T06:10:13.599Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'mongoTemplate' via factory method to bean named 'mappingMongoConverter'"}
{"timestamp":"2023-06-12T06:10:13.676Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'solrIndexerService'"}
{"timestamp":"2023-06-12T06:10:13.678Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'zee5MainCollectionRepository'"}
{"timestamp":"2023-06-12T06:10:13.700Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'newSolrTemplate'"}
{"timestamp":"2023-06-12T06:10:13.701Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'newSolrConfig'"}
{"timestamp":"2023-06-12T06:10:13.704Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_PRIMARY_SOLR_HOST' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:13.704Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'solr.primary.url' in PropertySource 'environmentProperties' with value of type String"}
{"timestamp":"2023-06-12T06:10:13.712Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'solrClient'"}
{"timestamp":"2023-06-12T06:10:14.076Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class org.springframework.data.geo.Point as reading converter."}
{"timestamp":"2023-06-12T06:10:14.077Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.geo.Point to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:14.077Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from interface org.springframework.data.solr.core.query.Update to class org.apache.solr.common.SolrInputDocument as writing converter."}
{"timestamp":"2023-06-12T06:10:14.077Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDate to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.077Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.077Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.DateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.077Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:14.077Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.078Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.DateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.078Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.078Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class org.joda.time.DateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.078Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.078Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.time.Instant as writing converter."}
{"timestamp":"2023-06-12T06:10:14.078Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.time.LocalDateTime as writing converter."}
{"timestamp":"2023-06-12T06:10:14.078Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.078Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.078Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:14.079Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.079Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.079Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.079Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:14.079Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.079Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:14.079Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.079Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:14.079Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter."}
{"timestamp":"2023-06-12T06:10:14.079Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:14.079Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter."}
{"timestamp":"2023-06-12T06:10:14.080Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:14.080Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter."}
{"timestamp":"2023-06-12T06:10:14.080Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:14.080Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.080Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:14.081Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'solrExceptionTranslator'"}
{"timestamp":"2023-06-12T06:10:14.084Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'solrMappingContext'"}
{"timestamp":"2023-06-12T06:10:14.089Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'solrConverter'"}
{"timestamp":"2023-06-12T06:10:14.090Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class org.springframework.data.geo.Point as reading converter."}
{"timestamp":"2023-06-12T06:10:14.090Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.geo.Point to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:14.090Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from interface org.springframework.data.solr.core.query.Update to class org.apache.solr.common.SolrInputDocument as writing converter."}
{"timestamp":"2023-06-12T06:10:14.091Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDate to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.091Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.091Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.DateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.091Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:14.091Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.091Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.DateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.091Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.091Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class org.joda.time.DateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.091Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.091Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.time.Instant as writing converter."}
{"timestamp":"2023-06-12T06:10:14.092Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.time.LocalDateTime as writing converter."}
{"timestamp":"2023-06-12T06:10:14.092Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.092Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.092Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:14.092Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.092Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.092Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.092Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:14.092Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.092Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:14.093Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.093Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:14.093Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter."}
{"timestamp":"2023-06-12T06:10:14.093Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:14.093Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter."}
{"timestamp":"2023-06-12T06:10:14.093Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:14.093Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter."}
{"timestamp":"2023-06-12T06:10:14.093Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:14.093Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.093Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:14.103Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'customConversions'"}
{"timestamp":"2023-06-12T06:10:14.104Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class org.springframework.data.geo.Point as reading converter."}
{"timestamp":"2023-06-12T06:10:14.105Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.geo.Point to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:14.105Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from interface org.springframework.data.solr.core.query.Update to class org.apache.solr.common.SolrInputDocument as writing converter."}
{"timestamp":"2023-06-12T06:10:14.105Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDate to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.105Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.105Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.DateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.105Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:14.105Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.105Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.DateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.106Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.106Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class org.joda.time.DateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.106Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.106Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.time.Instant as writing converter."}
{"timestamp":"2023-06-12T06:10:14.106Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.time.LocalDateTime as writing converter."}
{"timestamp":"2023-06-12T06:10:14.106Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.106Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.106Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:14.106Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.106Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.107Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.107Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:14.107Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.107Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:14.107Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.107Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:14.107Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter."}
{"timestamp":"2023-06-12T06:10:14.107Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:14.107Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter."}
{"timestamp":"2023-06-12T06:10:14.108Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:14.108Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter."}
{"timestamp":"2023-06-12T06:10:14.108Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:14.108Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.108Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:14.147Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'metricsRepositoryMethodInvocationListener'"}
{"timestamp":"2023-06-12T06:10:14.147Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration'"}
{"timestamp":"2023-06-12T06:10:14.148Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration' via constructor to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'"}
{"timestamp":"2023-06-12T06:10:14.149Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'repositoryTagsProvider'"}
{"timestamp":"2023-06-12T06:10:14.152Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'metricsRepositoryMethodInvocationListener' via factory method to bean named 'repositoryTagsProvider'"}
{"timestamp":"2023-06-12T06:10:14.187Z","level":"DEBUG","class":"org.springframework.data.repository.core.support.RepositoryFactorySupport","message":"Initializing repository instance for com.zee.cms.mw.indexer.repository.newSolr.Zee5MainCollectionRepository…"}
{"timestamp":"2023-06-12T06:10:14.302Z","level":"DEBUG","class":"org.springframework.data.repository.core.support.RepositoryFactorySupport","message":"Finished creation of repository instance for com.zee.cms.mw.indexer.repository.newSolr.Zee5MainCollectionRepository."}
{"timestamp":"2023-06-12T06:10:14.303Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'solrMaster2IndexerService'"}
{"timestamp":"2023-06-12T06:10:14.305Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'zee5MainCollectionMaster2Repository'"}
{"timestamp":"2023-06-12T06:10:14.307Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'secondMasterSolrTemplate'"}
{"timestamp":"2023-06-12T06:10:14.307Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'secondMasterSolrConfig'"}
{"timestamp":"2023-06-12T06:10:14.311Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_SECOND_MASTER_SOLR_HOST' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.311Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'solr.primary.url-second-master' in PropertySource 'environmentProperties' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.341Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'secondMasterSolrClient'"}
{"timestamp":"2023-06-12T06:10:14.343Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class org.springframework.data.geo.Point as reading converter."}
{"timestamp":"2023-06-12T06:10:14.343Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.springframework.data.geo.Point to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:14.343Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from interface org.springframework.data.solr.core.query.Update to class org.apache.solr.common.SolrInputDocument as writing converter."}
{"timestamp":"2023-06-12T06:10:14.343Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDate to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.343Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.343Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.DateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.343Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:14.343Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.343Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class org.joda.time.DateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.344Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.344Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class org.joda.time.DateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.344Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class org.joda.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.344Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.time.Instant as writing converter."}
{"timestamp":"2023-06-12T06:10:14.344Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class org.joda.time.LocalDateTime to class java.time.LocalDateTime as writing converter."}
{"timestamp":"2023-06-12T06:10:14.344Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.344Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.344Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:14.344Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.344Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.344Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.345Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:14.345Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter."}
{"timestamp":"2023-06-12T06:10:14.345Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:14.345Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.345Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:14.345Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter."}
{"timestamp":"2023-06-12T06:10:14.345Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:14.345Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter."}
{"timestamp":"2023-06-12T06:10:14.345Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter."}
{"timestamp":"2023-06-12T06:10:14.345Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter."}
{"timestamp":"2023-06-12T06:10:14.345Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter."}
{"timestamp":"2023-06-12T06:10:14.345Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter."}
{"timestamp":"2023-06-12T06:10:14.345Z","level":"DEBUG","class":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter."}
{"timestamp":"2023-06-12T06:10:14.346Z","level":"DEBUG","class":"org.springframework.data.repository.core.support.RepositoryFactorySupport","message":"Initializing repository instance for com.zee.cms.mw.indexer.repository.secondMasterSolr.Zee5MainCollectionMaster2Repository…"}
{"timestamp":"2023-06-12T06:10:14.362Z","level":"DEBUG","class":"org.springframework.data.repository.core.support.RepositoryFactorySupport","message":"Finished creation of repository instance for com.zee.cms.mw.indexer.repository.secondMasterSolr.Zee5MainCollectionMaster2Repository."}
{"timestamp":"2023-06-12T06:10:14.363Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'newIndexerServiceV2CoreImpl'"}
{"timestamp":"2023-06-12T06:10:14.367Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'zee5MainCollectionV2Repository'"}
{"timestamp":"2023-06-12T06:10:14.383Z","level":"DEBUG","class":"org.springframework.data.repository.core.support.RepositoryFactorySupport","message":"Initializing repository instance for com.zee.cms.mw.indexer.repository.newSolr.Zee5MainCollectionV2Repository…"}
{"timestamp":"2023-06-12T06:10:14.394Z","level":"DEBUG","class":"org.springframework.data.repository.core.support.RepositoryFactorySupport","message":"Finished creation of repository instance for com.zee.cms.mw.indexer.repository.newSolr.Zee5MainCollectionV2Repository."}
{"timestamp":"2023-06-12T06:10:14.395Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'zee5MainCollectionV2A2Repository'"}
{"timestamp":"2023-06-12T06:10:14.397Z","level":"DEBUG","class":"org.springframework.data.repository.core.support.RepositoryFactorySupport","message":"Initializing repository instance for com.zee.cms.mw.indexer.repository.secondMasterSolr.Zee5MainCollectionV2A2Repository…"}
{"timestamp":"2023-06-12T06:10:14.445Z","level":"DEBUG","class":"org.springframework.data.repository.core.support.RepositoryFactorySupport","message":"Finished creation of repository instance for com.zee.cms.mw.indexer.repository.secondMasterSolr.Zee5MainCollectionV2A2Repository."}
{"timestamp":"2023-06-12T06:10:14.447Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'notificationServiceImpl'"}
{"timestamp":"2023-06-12T06:10:14.450Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'notificationPublisher'"}
{"timestamp":"2023-06-12T06:10:14.452Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'notificationMessagingTemplate'"}
{"timestamp":"2023-06-12T06:10:14.452Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'notificationConfig'"}
{"timestamp":"2023-06-12T06:10:14.456Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'amazonSNSAsync'"}
{"timestamp":"2023-06-12T06:10:14.456Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'awsConfig'"}
{"timestamp":"2023-06-12T06:10:14.460Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'AWS_REGION' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.460Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'cloud.aws.region.static' in PropertySource 'environmentProperties' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.784Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'notificationMessagingTemplate' via factory method to bean named 'amazonSNSAsync'"}
{"timestamp":"2023-06-12T06:10:14.801Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'env' in PropertySource 'environmentProperties' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.802Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_NOTIFICATION_TOPIC' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.802Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'mw.indexer.sns-topic' in PropertySource 'environmentProperties' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.802Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_SOLR_UPSERT_TOPIC' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.802Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'mw.indexer.sns-solr-upsert' in PropertySource 'environmentProperties' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.802Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_SOLR_UPSERT_FIFO_TOPIC' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.803Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'mw.indexer.sns-solr-upsert-fifo' in PropertySource 'environmentProperties' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.803Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_SOLR_UPSERT_FIFO_TOPIC_ARN' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.803Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'mw.indexer.sns-solr-upsert-fifo-arn' in PropertySource 'environmentProperties' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.803Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_SOLR_DELETE_TOPIC' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.803Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'mw.indexer.sns-solr-delete' in PropertySource 'environmentProperties' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.804Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'queueMessagePublisher'"}
{"timestamp":"2023-06-12T06:10:14.807Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'queueMessagingTemplate'"}
{"timestamp":"2023-06-12T06:10:14.807Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'messagingConfig'"}
{"timestamp":"2023-06-12T06:10:14.810Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'amazonSQSAsync'"}
{"timestamp":"2023-06-12T06:10:14.871Z","level":"DEBUG","class":"org.springframework.beans.factory.support.ConstructorResolver","message":"Autowiring by type from bean name 'queueMessagingTemplate' via factory method to bean named 'amazonSQSAsync'"}
{"timestamp":"2023-06-12T06:10:14.881Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_INDEXER_QUEUE' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.881Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'mw.indexer.sqs-queue' in PropertySource 'environmentProperties' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.882Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_INDEXER_GOOGLE_TOPIC' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.882Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'mw.indexer.google-queue' in PropertySource 'environmentProperties' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.882Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_THUMBNAIL_QUEUE' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.882Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'mw.indexer.thumbnail-queue' in PropertySource 'environmentProperties' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.882Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_INDEXER_WATCHHISTORY_TOPIC' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.883Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'mw.indexer.watchhistory-queue' in PropertySource 'environmentProperties' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.883Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_INDEXER_SOLR_UPSERT_QUEUE' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.883Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'mw.indexer.solr-upsert-queue' in PropertySource 'environmentProperties' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.883Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'CMS_MW_STATUS_TRACKER_QUEUE' in PropertySource 'systemEnvironment' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.883Z","level":"DEBUG","class":"org.springframework.core.env.PropertySourcesPropertyResolver","message":"Found key 'mw.indexer.status-tracker-queue' in PropertySource 'environmentProperties' with value of type String"}
{"timestamp":"2023-06-12T06:10:14.884Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'kafkaProducer'"}
{"timestamp":"2023-06-12T06:10:14.888Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'apache'"}
{"timestamp":"2023-06-12T06:10:14.888Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'kafkaConfig'"}
{"timestamp":"2023-06-12T06:10:14.891Z","level":"DEBUG","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","message":"Creating shared instance of singleton bean 'spring.kafka-org.springframework.boot.autoconfigure.kafka.KafkaProperties'"}
{"timestamp":"2023-06-12T06:10:14.899Z","level":"WARN","class":"org.springframework.context.support.AbstractApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'newIndexerServiceV2CoreImpl': Unsatisfied dependency expressed through field 'kafkaProducer'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaProducer': Unsatisfied dependency expressed through field 'kafkaTemplate'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'CMS_KAFKA_CLUSTER' in value \"${CMS_KAFKA_CLUSTER}\""}
Jun 12, 2023 6:10:14 AM org.apache.catalina.core.StandardService stopInternal
INFO: Stopping service [Tomcat]
{"timestamp":"2023-06-12T06:10:14.992Z","level":"DEBUG","class":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","message":"\n\n\n============================\nCONDITIONS EVALUATION REPORT\n============================\n\n\nPositive matches:\n-----------------\n\n   AopAutoConfiguration matched:\n      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)\n\n   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:\n      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:\n      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)\n\n   AutoServiceRegistrationAutoConfiguration matched:\n      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)\n\n   AutoServiceRegistrationConfiguration matched:\n      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)\n\n   AvailabilityProbesAutoConfiguration matched:\n      - Probes availability running on Kubernetes (AvailabilityProbesAutoConfiguration.ProbesCondition)\n\n   AvailabilityProbesAutoConfiguration#livenessStateHealthIndicator matched:\n      - @ConditionalOnMissingBean (names: livenessStateHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   AvailabilityProbesAutoConfiguration#readinessStateHealthIndicator matched:\n      - @ConditionalOnMissingBean (names: readinessStateHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   CacheMeterBinderProvidersConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)\n\n   CommonsClientAutoConfiguration.ActuatorConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.endpoint.annotation.Endpoint' (OnClassCondition)\n      - @ConditionalOnProperty (spring.cloud.features.enabled) matched (OnPropertyCondition)\n\n   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.health.HealthIndicator' (OnClassCondition)\n      - @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.blocking.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springframework.cloud.client.discovery.DiscoveryClient; SearchStrategy: all) found beans 'simpleDiscoveryClient', 'compositeDiscoveryClient' (OnBeanCondition)\n\n   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration#discoveryClientHealthIndicator matched:\n      - @ConditionalOnProperty (spring.cloud.discovery.client.health-indicator.enabled) matched (OnPropertyCondition)\n\n   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration#discoveryCompositeHealthContributor matched:\n      - @ConditionalOnProperty (spring.cloud.discovery.client.composite-indicator.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springframework.cloud.client.discovery.health.DiscoveryHealthIndicator; SearchStrategy: all) found bean 'discoveryClientHealthIndicator' (OnBeanCondition)\n\n   CompatibilityVerifierAutoConfiguration matched:\n      - @ConditionalOnProperty (spring.cloud.compatibility-verifier.enabled) matched (OnPropertyCondition)\n\n   CompositeMeterRegistryAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)\n\n   ConfigurationPropertiesRebinderAutoConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor; SearchStrategy: all) found bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor' (OnBeanCondition)\n\n   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesBeans matched:\n      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesBeans; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesRebinder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   io.awspring.cloud.autoconfigure.context.ContextCredentialsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'com.amazonaws.auth.AWSCredentialsProvider' (OnClassCondition)\n\n   org.springframework.cloud.aws.autoconfigure.context.ContextCredentialsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'com.amazonaws.auth.AWSCredentialsProvider' (OnClassCondition)\n\n   io.awspring.cloud.autoconfigure.context.ContextResourceLoaderAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'com.amazonaws.services.s3.AmazonS3Client' (OnClassCondition)\n\n   org.springframework.cloud.aws.autoconfigure.context.ContextResourceLoaderAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'com.amazonaws.services.s3.AmazonS3Client' (OnClassCondition)\n\n   ContextStackAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'com.amazonaws.services.cloudformation.AmazonCloudFormation' (OnClassCondition)\n      - @ConditionalOnProperty (cloud.aws.stack.enabled=true) matched (OnPropertyCondition)\n\n   DataSourceTransactionManagerAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)\n\n   DiskSpaceHealthContributorAutoConfiguration matched:\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:\n      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DispatcherServletAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:\n      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)\n      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:\n      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)\n      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:\n      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:\n      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)\n\n   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   EndpointAutoConfiguration#endpointOperationParameterMapper matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   ErrorMvcAutoConfiguration#basicErrorController matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration#errorAttributes matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:\n      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:\n      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)\n      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)\n\n   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:\n      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   FeignAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'feign.Feign' (OnClassCondition)\n\n   FeignAutoConfiguration.DefaultFeignTargeterConfiguration matched:\n      - AnyNestedCondition 1 matched 1 did not; NestedCondition on FeignCircuitBreakerDisabledConditions.CircuitBreakerDisabled @ConditionalOnProperty (feign.circuitbreaker.enabled=false) matched; NestedCondition on FeignCircuitBreakerDisabledConditions.CircuitBreakerClassMissing @ConditionalOnMissingClass found unwanted class 'org.springframework.cloud.client.circuitbreaker.CircuitBreaker' (FeignCircuitBreakerDisabledConditions)\n\n   FeignAutoConfiguration.DefaultFeignTargeterConfiguration#feignTargeter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.cloud.openfeign.Targeter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   FeignHalAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.hateoas.config.WebConverters' (OnClassCondition)\n      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n\n   FeignHalAutoConfiguration#webConvertersCustomizer matched:\n      - @ConditionalOnBean (types: org.springframework.hateoas.config.WebConverters; SearchStrategy: all) found bean 'hypermediaWebMvcConverters' (OnBeanCondition)\n\n   GenericCacheConfiguration matched:\n      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)\n\n   GsonAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)\n\n   GsonAutoConfiguration#gson matched:\n      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   GsonAutoConfiguration#gsonBuilder matched:\n      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   GsonHttpMessageConvertersConfiguration matched:\n      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)\n\n   HealthContributorAutoConfiguration#pingHealthContributor matched:\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   HealthEndpointAutoConfiguration matched:\n      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)\n\n   HealthEndpointConfiguration#healthContributorRegistry matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthEndpoint matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthEndpointGroups matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthStatusAggregator matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointWebExtensionConfiguration matched:\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)\n      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)\n\n   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointWebExtensionConfiguration.MvcAdditionalHealthEndpointPathsConfiguration matched:\n      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)\n      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)\n\n   HibernateJpaAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)\n\n   HttpClientConfiguration.ApacheHttpClientConfiguration matched:\n      - @ConditionalOnClass found required class 'org.apache.http.client.HttpClient' (OnClassCondition)\n      - @ConditionalOnProperty (spring.cloud.httpclientfactories.apache.enabled) matched (OnPropertyCondition)\n\n   HttpClientConfiguration.ApacheHttpClientConfiguration#apacheHttpClientBuilder matched:\n      - @ConditionalOnMissingBean (types: org.apache.http.impl.client.HttpClientBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpClientConfiguration.ApacheHttpClientConfiguration#ap2023-06-12T06:10:14.993124872Z acheHttpClientFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.cloud.commons.httpclient.ApacheHttpClientFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpClientConfiguration.ApacheHttpClientConfiguration#connManFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.cloud.commons.httpclient.ApacheHttpCl…"}
{"timestamp":"2023-06-12T06:10:15.010Z","level":"ERROR","class":"org.springframework.boot.SpringApplication","message":"Application run failed","exception":{"type":"org.springframework.beans.factory.UnsatisfiedDependencyException","stacktrace":"org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'newIndexerServiceV2CoreImpl': Unsatisfied dependency expressed through field 'kafkaProducer'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaProducer': Unsatisfied dependency expressed through field 'kafkaTemplate'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'CMS_KAFKA_CLUSTER' in value \"${CMS_KAFKA_CLUSTER}\"\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:740)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:415)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:303)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1312)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1301)\n\tat com.zee.cms.mw.indexer.MwIndexerServiceApplication.main(MwIndexerServiceApplication.java:19)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.base/java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49)\n\tat org.springframework.boot.loader.Launcher.launch(Launcher.java:108)\n\tat org.springframework.boot.loader.Launcher.launch(Launcher.java:58)\n\tat org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:88)\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaProducer': Unsatisfied dependency expressed through field 'kafkaTemplate'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'CMS_KAFKA_CLUSTER' in value \"${CMS_KAFKA_CLUSTER}\"\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)\n\t... 28 more\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'CMS_KAFKA_CLUSTER' in value \"${CMS_KAFKA_CLUSTER}\"\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:405)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)\n\t... 42 more\nCaused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'CMS_KAFKA_CLUSTER' in value \"${CMS_KAFKA_CLUSTER}\"\n\tat org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)\n\tat org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)\n\tat org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)\n\tat org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)\n\tat org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)\n\tat org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:79)\n\tat org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:60)\n\tat org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:594)\n\tat org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)\n\tat org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)\n\tat org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)\n\tat org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)\n\tat org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)\n\tat org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)\n\tat org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)\n\tat org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)\n\tat org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:936)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1330)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)\n\t... 62 more\n"}}
